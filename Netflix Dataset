/*used Kaggle's Netflix Dataset - https://www.kaggle.com/datasets/shivamb/netflix-shows
Cleaned & Analyzed dataset */


select * from dbo.netflix_titles

--checking show_id duplicates
select show_id, COUNT(*)
from dbo.netflix_titles
group by show_id
having COUNT(*) >1
--no duplicates for show_id

--checking title duplicates
select title, COUNT(*)
from dbo.netflix_titles
group by title
having COUNT(*) >1
--5 rows affected

--querying titles that are duplicated
select * from netflix_titles
where title in (
    select title
    from dbo.netflix_titles
    group by title
    having COUNT(*)>1
)
order by title

--after analyzing returned data, going to have to fix the spelling of the titles to correctly
--view the duplicated titles

select * from dbo.netflix_titles
where concat(upper(title), type) in (
    select concat(upper(title), type)
    from dbo.netflix_titles
    group by upper(title), [type]
    having COUNT(*)>1
)
order by title

--removing duplicated titles



--cast, country, director columns are very satured, gotta clean them up
--creating new tables
select show_id AS genre 
from dbo.netflix_titles
cross apply string_split(director,',')

select show_id, trim(value) as director 
into dbo.netflix_directors
from dbo.netflix_titles
cross apply string_split(director,',')
select * from netflix_directors

select show_id, trim(value) as country 
into dbo.netflix_country
from dbo.netflix_titles
cross apply string_split(country,',')
select * from netflix_country

select show_id, trim(value) as cast 
into dbo.netflix_cast
from dbo.netflix_titles
cross apply string_split(cast,',')
select * from netflix_cast

select show_id, trim(value) as genre
into dbo.netflix_genre
from dbo.netflix_titles
cross apply string_split(listed_in,',')
select * from netflix_genre

--taking a look at missing values
--populating missing values in country
select show_id, country
from dbo.netflix_titles
where country is null

select * from dbo.netflix_country where show_id='s1001'

select * 
from dbo.netflix_titles
where country is null

select * from dbo.netflix_titles where director='Julien Leclercq'

--the previous director has directed 3 movies, 2 of which were filmed in France. 
--going to use this finding as mapping

select director, country
from dbo.netflix_country nc 
inner join dbo.netflix_directors nd on nc.show_id=nd.show_id
group by director, country

--combining previous findings to populate missing values in the country column
insert into dbo.netflix_country
select show_id,m.country
from dbo.netflix_titles nr 
inner join (
    select director, country
    from dbo.netflix_country nc 
    inner join dbo.netflix_directors nd on nc.show_id=nd.show_id
    group by director, country
) m on nr.director=m.director
where nr.country is null

--taking a look at missing values in the duration column
select * from netflix_titles where duration is NULL
--duration seems to be under wrong column, rating

with cte as (
    select *, ROW_NUMBER() over (partition by title, type order by show_id) as rn
    from dbo.netflix_titles
)
select show_id, type, title, cast(date_added as date) as date_added, release_year, rating,
case when duration is null then rating else duration end as duration, description
from cte 
where rn=1 


--date_added column null values
select show_id, date_added
from dbo.netflix_titles
where date_added is NULL

with cte as (
    select *, ROW_NUMBER() over (partition by title, type order by show_id) as rn
    from dbo.netflix_titles
)
select show_id, type, title, cast(date_added as date) as date_added, release_year, rating, 
case when duration is null then rating else duration end as duration, description
into netflix 
from cte 
--created a much cleaner and earier to read table
select * from netflix

--NETFLIX DATA ANALYSIS
--1 for each director count the number of movies and tv shows created by them in separate columns.
select nd.director,
count(distinct case when n.type='Movie' then n.show_id end) as no_of_movies,
count(distinct case when n.type='TV Show' then n.show_id end) as no_of_tvshow
from netflix n 
inner join netflix_directors nd on n.show_id=nd.show_id
group by nd.director
having count(distinct n.type)>1

--2 which country has the highest number of comedy movies
select top 1 nc.country, count(distinct ng.show_id) as no_of_movies
from dbo.netflix_genre ng
inner join netflix_country nc on ng.show_id=nc.show_id
inner join netflix n on ng.show_id=nc.show_id
where ng.genre='Comedies' and n.type='Movie'
group by nc.country
order by no_of_movies DESC

--3 for each year (as per date added to netflix), which director has maximum number of movies released
with cte as (
    select nd.director, YEAR(date_added) as date_year, count(n.show_id) as no_of_movies
    from netflix n 
    inner join netflix_directors nd on n.show_id=nd.show_id
    where type='Movie'
    group by nd.director, YEAR(date_added)
),
cte2 as(
    select *,
ROW_NUMBER() over(partition by date_year order by no_of_movies desc) as rn 
from cte
--order by date_year, no_of_movies desc
)
select * from cte2 where rn=1

--4 what is the average duration of movies in each genre
select ng.genre, avg(cast(replace(duration, 'min','')as int)) as avg_duration
from netflix n 
inner join netflix_genre ng on n.show_id=ng.show_id
where type='Movie'
group by ng.genre 
order by ng.genre ASC

--5 find the list of directors who have created both horror & comedy movies
select nd.director,
count(distinct case when ng.genre='Comedies' then n.show_id end) as no_of_comedy,
count(distinct case when ng.genre='Horror Movies' then n.show_id end) as no_of_horror
from netflix n 
inner join netflix_genre ng on n.show_id=ng.show_id
inner join netflix_directors nd on n.show_id=nd.show_id
where type='Movie' and ng.genre in ('Comedies','Horror Movies')
group by nd.director
having count(distinct ng.genre)=2

--checking
select * from netflix_genre
where show_id in (
    select show_id from netflix_directors where director='Steve Brill')
order by genre

