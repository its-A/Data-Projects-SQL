--This database has 11 tables in it. Running different queries to analyze the data. 

--this query is returning customers table from chinook db
SELECt * FROM chinook.customers;

--the following query will return Customers (full names, customer ID 
--& country) who DO NOT live in Canada
SELECT FirstName, LastName, CustomerId, Country 
FROM chinook.customers 
WHERE Country != "Canada";

--returning all customers who have "null" as response for company AND are from canada
SELECT FirstName, LastName, CustomerId, Company, Country FROM chinook.customers
WHERE company is Null AND country = "Canada";

--Showing only customers from Brazil
SELECT FirstName, LastName, CustomerID, Country
FROM chinook.customers
WHERE Country = "Brazil";

--returning invoices table from chiook db
SELECT * FROM chinook.invoices;

--Locating invoices of customers who are from Brazil by joining the customers table & invoices table
SELECT cust.FirstName, cust.LastName, inv.InvoiceID, inv.BillingCountry,
inv.InvoiceDate
FROM chinook.invoices AS inv
LEFT JOIN chinook.customers AS cust
ON inv.CustomerID = cust.CustomerId
WHERE inv.BillingCountry = "Brazil";

--returning a distinct list of billing countries
SELECT DISTINCT BillingCountry FROM chinook.Invoices;

--returning employees table from chinook db
SELECT * FROM chinook.employees;

--returning all employees with Sales Support Agent title
SELECT * FROM chinook.employees
WHERE Title = "Sales Support Agent";

--returning invoices associated with each sales agent
SELECT emp.LastName, emp.Firstname, inv.InvoiceId, inv.total
FROM chinook.employees emp 
JOIN chinook.Invoices Inv ON Inv.CustomerId = emp.EmployeeId;

--returning Invoice total, customer name, country & Sales Agent name for all invoices and customers, joining the table using different syntax
SELECT emp.FirstName, emp.LastName, inv.InvoiceId, inv.Total
FROM Invoices inv, Employees emp, Customers cust
WHERE inv.CustomerId = cust.CustomerId AND cust.SupportRepId == emp.EmployeeId;

--Returning Total Sales made by each sales agent
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;

--returning the top earning sales agent in 2009
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;

--count of invoices in 2009
SELECT COUNT (*)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'

--returning total sales for 2009
SELECT SUM(Total)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--returning track table
SELECT * FROM chinook.tracks;

--returning purchase track name with each invoice line
SELECT tra.Name, inv.InvoiceLineId
FROM chinook.Invoice_items inv
JOIN chinook.Tracks tra
ON inv.TrackId = tra.TrackId;

--returning purchased track AND artist name with each invoice line ID
SELECT i.InvoiceLineId, ar.name as Artist, t.Name as Track 
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

--returning all tracks, including album name, media type & genre
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
on m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
on g.GenreId = t.GenreId;
